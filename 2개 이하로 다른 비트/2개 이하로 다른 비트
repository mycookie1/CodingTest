#include <string>
#include <vector>
#include <iostream>

using namespace std;
//비트로 변환
//뒤에서 부터 0 찾기
//숫자로 변환

//비트로 변환
vector<long long> number_to_bit(long long number){
    vector<long long> bit;
    if (number == 0) bit.push_back(0);
    while(number > 0) {
        bit.push_back(number % 2);
        number /= 2;
    }
    return bit;
}


//비트에서 숫자로 변환
long long bit_to_number(vector<long long> bit){
    long long number = 0;
    for(int i = bit.size() - 1; i >= 0; i--) {
        number *= 2;
        number += bit[i];
    }
    return number;
}

//비트에서 큰수 중 가장 작은 수로 변환하기
vector<long long> find_zero(vector<long long> bit){
    bool check = false;
    for(int i = 0; i < bit.size() ; i++) {
        if(bit[i] == 0 && i == 0) {
            bit[i] = 1;
            check = true;
            break;
        }
        else if(bit[i] == 0 && i != 0) {
            bit[i] = 1;
            bit[i - 1] = 0;
            check = true;
            break;
        }
    }
    //길이가 2보다 큰 경우
    if(check == false && bit.size() >= 2) {
        bit.push_back(1);
        bit[bit.size() - 2] = 0;
    }
    //길이가 2보다 작은 경우
    else if(check == false) {
        bit.push_back(1);
        bit[0] = 0;
    }
    return bit;
}

vector<long long> solution(vector<long long> numbers) {
    vector<long long> answer;
    for(long long temp : numbers) {
        vector<long long> bit = number_to_bit(temp);
        answer.push_back(bit_to_number(find_zero(bit)));
    }
    return answer;
}