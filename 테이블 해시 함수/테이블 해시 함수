#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
using namespace std;
int column = 0;
//정렬 기준 만들기
//column기준으로 오름차순, 기준값이 같으면 0번째 기준으로 내림차순
bool compare(vector<int> a, vector<int> b){
    if(a[column] == b[column]) {
        if(a[0] < b[0]) {
            return false;
        }
        else {
            return true;
        }
    }
    else if(a[column] < b[column]) {
        return true;
    }
    else {
        return false;
    }
}

int solution(vector<vector<int>> data, int col, int row_begin, int row_end) {
    int answer = 0;
    column = col-1;
    
    //정렬
    sort(data.begin(),data.end(),compare);
    
    // 배열의 mod값들의 합을 담을 배열
    vector<int> sum;
 
    // row_begin부터 row_end까지 각 배열의 mod값들의 합을 구함
    for(int i = row_begin-1; i < row_end; i++) {
        int temp = 0;
        for(int j = 0; j < data[i].size(); j++) {
            temp += ( data[i][j] % (i+1) );
        }
        sum.push_back(temp);
    }
    
    answer = sum[0];
    // xor 연산
    for(int i = 1; i < sum.size(); i++) {
        answer ^= sum[i];
    }
    
    return answer;
}